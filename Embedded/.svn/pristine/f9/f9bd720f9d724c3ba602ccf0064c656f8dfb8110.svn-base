/******************************************************************************
 * @file SinTable.c
 *
 * @brief SIN table implementation
 *
 * This file provides the implementation for the sin table
 *
 * @copyright Copyright (c) 2012 Cyber Intergration
 * This document contains proprietary data and information of Cyber Integration 
 * LLC. It is the exclusive property of Cyber Integration, LLC and will not be 
 * disclosed in any form to any party without prior written permission of 
 * Cyber Integration, LLC. This document may not be reproduced or further used 
 * without the prior written permission of Cyber Integration, LLC.
 *
 * Version History
 * ======
 * $Rev: $
 * 
 *
 * \addtogroup SinTable
 * @{
 *****************************************************************************/

// system includes ------------------------------------------------------------

// local includes -------------------------------------------------------------
#include "SinTable/SinTable.h"

// library includes -----------------------------------------------------------

// Macros and Defines ---------------------------------------------------------
/// define the size of the sin table
#define SIN_TABLE_SIZE                        ( 1025 )

// enumerations ---------------------------------------------------------------

// structures -----------------------------------------------------------------

// global parameter declarations ----------------------------------------------

// local parameter declarations -----------------------------------------------

// local function prototypes --------------------------------------------------

// constant parameter initializations -----------------------------------------
static  S16 asSinTable[ SIN_TABLE_SIZE ] =
{
	0x0000, 0x0032, 0x0064, 0x0096, 0x00C9, 0x00FB, 0x012D, 0x015F, 
	0x0192, 0x01C4, 0x01F6, 0x0228, 0x025B, 0x028D, 0x02BF, 0x02F1, 
	0x0324, 0x0356, 0x0388, 0x03BA, 0x03ED, 0x041F, 0x0451, 0x0483, 
	0x04B6, 0x04E8, 0x051A, 0x054C, 0x057E, 0x05B1, 0x05E3, 0x0615, 
	0x0647, 0x067A, 0x06AC, 0x06DE, 0x0710, 0x0742, 0x0774, 0x07A7, 
	0x07D9, 0x080B, 0x083D, 0x086F, 0x08A1, 0x08D4, 0x0906, 0x0938, 
	0x096A, 0x099C, 0x09CE, 0x0A00, 0x0A32, 0x0A65, 0x0A97, 0x0AC9, 
	0x0AFB, 0x0B2D, 0x0B5F, 0x0B91, 0x0BC3, 0x0BF5, 0x0C27, 0x0C59, 
	0x0C8B, 0x0CBD, 0x0CEF, 0x0D21, 0x0D53, 0x0D85, 0x0DB7, 0x0DE9,
	0x0E1B, 0x0E4D, 0x0E7F, 0x0EB1, 0x0EE3, 0x0F15, 0x0F47, 0x0F79, 
	0x0FAB,	0x0FDC, 0x100E, 0x1040, 0x1072, 0x10A4, 0x10D6, 0x1107, 
	0x1139, 0x116B, 0x119D, 0x11CF, 0x1200, 0x1232, 0x1264, 0x1296, 
	0x12C7, 0x12F9, 0x132B, 0x135D, 0x138E, 0x13C0, 0x13F2, 0x1423, 
	0x1455, 0x1486, 0x14B8, 0x14EA, 0x151B, 0x154D, 0x157E, 0x15B0,
	0x15E1, 0x1613, 0x1644, 0x1676, 0x16A7, 0x16D9, 0x170A, 0x173C, 
	0x176D, 0x179F, 0x17D0, 0x1801, 0x1833, 0x1864, 0x1895, 0x18C7, 
	0x18F8, 0x1929, 0x195B, 0x198C, 0x19BD, 0x19EE, 0x1A20, 0x1A51, 
	0x1A82, 0x1AB3, 0x1AE4, 0x1B15, 0x1B46, 0x1B78, 0x1BA9, 0x1BDA,
	0x1C0B, 0x1C3C, 0x1C6D, 0x1C9E, 0x1CCF, 0x1D00, 0x1D31, 0x1D62,
	0x1D93,	0x1DC3, 0x1DF4, 0x1E25, 0x1E56, 0x1E87, 0x1EB8, 0x1EE8, 
	0x1F19, 0x1F4A, 0x1F7B, 0x1FAB, 0x1FDC, 0x200D, 0x203D, 0x206E,
	0x209F, 0x20CF, 0x2100, 0x2130, 0x2161, 0x2191, 0x21C2, 0x21F2, 
	0x2223, 0x2253, 0x2284, 0x22B4, 0x22E4, 0x2315, 0x2345, 0x2375,
	0x23A6, 0x23D6, 0x2406, 0x2436, 0x2467, 0x2497, 0x24C7, 0x24F7,
	0x2527, 0x2557, 0x2587, 0x25B7, 0x25E7, 0x2617, 0x2647, 0x2677, 
	0x26A7, 0x26D7, 0x2707, 0x2737, 0x2767, 0x2797, 0x27C6, 0x27F6, 
	0x2826, 0x2856, 0x2885, 0x28B5, 0x28E5, 0x2914, 0x2944, 0x2973,
	0x29A3, 0x29D2, 0x2A02, 0x2A31, 0x2A61, 0x2A90, 0x2AC0, 0x2AEF, 
	0x2B1E, 0x2B4E, 0x2B7D, 0x2BAC, 0x2BDB, 0x2C0B, 0x2C3A, 0x2C69, 
	0x2C98, 0x2CC7, 0x2CF6, 0x2D25, 0x2D54, 0x2D83, 0x2DB2, 0x2DE1,
	0x2E10, 0x2E3F, 0x2E6E, 0x2E9D, 0x2ECC, 0x2EFA, 0x2F29, 0x2F58,
	0x2F86, 0x2FB5, 0x2FE4, 0x3012, 0x3041, 0x306F, 0x309E, 0x30CC, 
	0x30FB, 0x3129, 0x3158, 0x3186, 0x31B4, 0x31E3, 0x3211, 0x323F, 
	0x326D, 0x329C, 0x32CA, 0x32F8, 0x3326, 0x3354, 0x3382, 0x33B0, 
	0x33DE, 0x340C, 0x343A, 0x3468, 0x3496, 0x34C3, 0x34F1, 0x351F, 
	0x354D, 0x357A, 0x35A8, 0x35D6, 0x3603, 0x3631, 0x365E, 0x368C,
	0x36B9, 0x36E7, 0x3714, 0x3741, 0x376F, 0x379C, 0x37C9, 0x37F6,
	0x3824, 0x3851, 0x387E, 0x38AB, 0x38D8, 0x3905, 0x3932, 0x395F, 
	0x398C, 0x39B9, 0x39E6, 0x3A12, 0x3A3F, 0x3A6C, 0x3A99, 0x3AC5, 
	0x3AF2, 0x3B1F, 0x3B4B, 0x3B78, 0x3BA4, 0x3BD1, 0x3BFD, 0x3C29, 
	0x3C56, 0x3C82, 0x3CAE, 0x3CDB, 0x3D07, 0x3D33, 0x3D5F, 0x3D8B, 
	0x3DB7, 0x3DE3, 0x3E0F, 0x3E3B, 0x3E67, 0x3E93, 0x3EBF, 0x3EEB, 
	0x3F16, 0x3F42, 0x3F6E, 0x3F99, 0x3FC5, 0x3FF0, 0x401C, 0x4047, 
	0x4073, 0x409E, 0x40CA, 0x40F5, 0x4120, 0x414C, 0x4177, 0x41A2, 
	0x41CD, 0x41F8, 0x4223, 0x424E, 0x4279, 0x42A4, 0x42CF, 0x42FA,
	0x4325, 0x4350, 0x437A, 0x43A5, 0x43D0, 0x43FA, 0x4425, 0x444F, 
	0x447A, 0x44A4, 0x44CF, 0x44F9, 0x4523, 0x454E, 0x4578, 0x45A2, 
	0x45CC, 0x45F6, 0x4620, 0x464A, 0x4674, 0x469E, 0x46C8, 0x46F2, 
	0x471C, 0x4746, 0x476F, 0x4799, 0x47C3, 0x47EC, 0x4816, 0x483F, 
	0x4869, 0x4892, 0x48BC, 0x48E5, 0x490E, 0x4938, 0x4961, 0x498A, 
	0x49B3, 0x49DC, 0x4A05, 0x4A2E, 0x4A57, 0x4A80, 0x4AA9, 0x4AD2, 
	0x4AFA, 0x4B23, 0x4B4C, 0x4B74, 0x4B9D, 0x4BC5, 0x4BEE, 0x4C16,
	0x4C3F, 0x4C67, 0x4C8F, 0x4CB8, 0x4CE0, 0x4D08, 0x4D30, 0x4D58, 
	0x4D80, 0x4DA8, 0x4DD0, 0x4DF8, 0x4E20, 0x4E48, 0x4E6F, 0x4E97,
	0x4EBF, 0x4EE6, 0x4F0E, 0x4F35, 0x4F5D, 0x4F84, 0x4FAC, 0x4FD3, 
	0x4FFA, 0x5021, 0x5049, 0x5070, 0x5097, 0x50BE, 0x50E5, 0x510C, 
	0x5133, 0x5159, 0x5180, 0x51A7, 0x51CE, 0x51F4, 0x521B, 0x5241,
	0x5268, 0x528E, 0x52B5, 0x52DB, 0x5301, 0x5328, 0x534E, 0x5374, 
	0x539A, 0x53C0, 0x53E6, 0x540C, 0x5432, 0x5458, 0x547D, 0x54A3, 
	0x54C9, 0x54EF, 0x5514, 0x553A, 0x555F, 0x5585, 0x55AA, 0x55CF, 
	0x55F4, 0x561A, 0x563F, 0x5664, 0x5689, 0x56AE, 0x56D3, 0x56F8, 
	0x571D, 0x5742, 0x5766, 0x578B, 0x57B0, 0x57D4, 0x57F9, 0x581D, 
	0x5842, 0x5866, 0x588A, 0x58AF, 0x58D3, 0x58F7, 0x591B, 0x593F,
	0x5963, 0x5987, 0x59AB, 0x59CF, 0x59F3, 0x5A16, 0x5A3A, 0x5A5E, 
	0x5A81, 0x5AA5, 0x5AC8, 0x5AEC, 0x5B0F, 0x5B32, 0x5B56, 0x5B79, 
	0x5B9C, 0x5BBF, 0x5BE2, 0x5C05, 0x5C28, 0x5C4B, 0x5C6D, 0x5C90, 
	0x5CB3, 0x5CD6, 0x5CF8, 0x5D1B, 0x5D3D, 0x5D5F, 0x5D82, 0x5DA4, 
	0x5DC6, 0x5DE9, 0x5E0B, 0x5E2D, 0x5E4F, 0x5E71, 0x5E93, 0x5EB4,
	0x5ED6, 0x5EF8, 0x5F1A, 0x5F3B, 0x5F5D, 0x5F7E, 0x5FA0, 0x5FC1, 
	0x5FE2, 0x6004, 0x6025, 0x6046, 0x6067, 0x6088, 0x60A9, 0x60CA, 
	0x60EB, 0x610C, 0x612D, 0x614D, 0x616E, 0x618E, 0x61AF, 0x61CF, 
	0x61F0, 0x6210, 0x6230, 0x6251, 0x6271, 0x6291, 0x62B1, 0x62D1,
	0x62F1, 0x6311, 0x6330, 0x6350, 0x6370, 0x638F, 0x63AF, 0x63CE, 
	0x63EE, 0x640D, 0x642D, 0x644C, 0x646B, 0x648A, 0x64A9, 0x64C8, 
	0x64E7, 0x6506, 0x6525, 0x6544, 0x6562, 0x6581, 0x65A0, 0x65BE, 
	0x65DD, 0x65FB, 0x6619, 0x6638, 0x6656, 0x6674, 0x6692, 0x66B0, 
	0x66CE, 0x66EC, 0x670A, 0x6728, 0x6745, 0x6763, 0x6781, 0x679E, 
	0x67BC, 0x67D9, 0x67F7, 0x6814, 0x6831, 0x684E, 0x686B, 0x6888, 
	0x68A5, 0x68C2, 0x68DF, 0x68FC, 0x6919, 0x6935, 0x6952, 0x696E,
	0x698B, 0x69A7, 0x69C4, 0x69E0, 0x69FC, 0x6A18, 0x6A34, 0x6A50, 
	0x6A6C, 0x6A88, 0x6AA4, 0x6AC0, 0x6ADB, 0x6AF7, 0x6B13, 0x6B2E,
	0x6B4A, 0x6B65, 0x6B80, 0x6B9C, 0x6BB7, 0x6BD2, 0x6BED, 0x6C08, 
	0x6C23, 0x6C3E, 0x6C58, 0x6C73, 0x6C8E, 0x6CA8, 0x6CC3, 0x6CDD,
	0x6CF8, 0x6D12, 0x6D2C, 0x6D47, 0x6D61, 0x6D7B, 0x6D95, 0x6DAF,
	0x6DC9, 0x6DE3, 0x6DFC, 0x6E16, 0x6E30, 0x6E49, 0x6E63, 0x6E7C, 
	0x6E95, 0x6EAF, 0x6EC8, 0x6EE1, 0x6EFA, 0x6F13, 0x6F2C, 0x6F45, 
	0x6F5E, 0x6F76, 0x6F8F, 0x6FA8, 0x6FC0, 0x6FD9, 0x6FF1, 0x7009, 
	0x7022, 0x703A, 0x7052, 0x706A, 0x7082, 0x709A, 0x70B2, 0x70CA,
	0x70E1, 0x70F9, 0x7111, 0x7128, 0x7140, 0x7157, 0x716E, 0x7186,
	0x719D, 0x71B4, 0x71CB, 0x71E2, 0x71F9, 0x7210, 0x7226, 0x723D,
	0x7254, 0x726A, 0x7281, 0x7297, 0x72AE, 0x72C4, 0x72DA, 0x72F0,
	0x7306, 0x731C, 0x7332, 0x7348, 0x735E, 0x7374, 0x7389, 0x739F, 
	0x73B5, 0x73CA, 0x73DF, 0x73F5, 0x740A, 0x741F, 0x7434, 0x7449, 
	0x745E, 0x7473, 0x7488, 0x749D, 0x74B1, 0x74C6, 0x74DB, 0x74EF, 
	0x7503, 0x7518, 0x752C, 0x7540, 0x7554, 0x7568, 0x757C, 0x7590, 
	0x75A4, 0x75B8, 0x75CC, 0x75DF, 0x75F3, 0x7606, 0x761A, 0x762D, 
	0x7640, 0x7653, 0x7667, 0x767A, 0x768D, 0x76A0, 0x76B2, 0x76C5, 
	0x76D8, 0x76EA, 0x76FD, 0x7710, 0x7722, 0x7734, 0x7747, 0x7759, 
	0x776B, 0x777D, 0x778F, 0x77A1, 0x77B3, 0x77C4, 0x77D6, 0x77E8,
	0x77F9, 0x780B, 0x781C, 0x782E, 0x783F, 0x7850, 0x7861, 0x7872, 
	0x7883, 0x7894, 0x78A5, 0x78B6, 0x78C6, 0x78D7, 0x78E7, 0x78F8, 
	0x7908, 0x7919, 0x7929, 0x7939, 0x7949, 0x7959, 0x7969, 0x7979, 
	0x7989, 0x7998, 0x79A8, 0x79B8, 0x79C7, 0x79D7, 0x79E6, 0x79F5, 
	0x7A04, 0x7A14, 0x7A23, 0x7A32, 0x7A41, 0x7A4F, 0x7A5E, 0x7A6D, 
	0x7A7C, 0x7A8A, 0x7A99, 0x7AA7, 0x7AB5, 0x7AC4, 0x7AD2, 0x7AE0, 
	0x7AEE, 0x7AFC, 0x7B0A, 0x7B18, 0x7B25, 0x7B33, 0x7B41, 0x7B4E, 
	0x7B5C, 0x7B69, 0x7B76, 0x7B83, 0x7B91, 0x7B9E, 0x7BAB, 0x7BB8, 
	0x7BC4, 0x7BD1, 0x7BDE, 0x7BEB, 0x7BF7, 0x7C04, 0x7C10, 0x7C1C,
	0x7C29, 0x7C35, 0x7C41, 0x7C4D, 0x7C59, 0x7C65, 0x7C70, 0x7C7C, 
	0x7C88, 0x7C93, 0x7C9F, 0x7CAA, 0x7CB6, 0x7CC1, 0x7CCC, 0x7CD7, 
	0x7CE2, 0x7CED, 0x7CF8, 0x7D03, 0x7D0E, 0x7D18, 0x7D23, 0x7D2E, 
	0x7D38, 0x7D42, 0x7D4D, 0x7D57, 0x7D61, 0x7D6B, 0x7D75, 0x7D7F, 
	0x7D89, 0x7D93, 0x7D9C, 0x7DA6, 0x7DB0, 0x7DB9, 0x7DC2, 0x7DCC, 
	0x7DD5, 0x7DDE, 0x7DE7, 0x7DF0, 0x7DF9, 0x7E02, 0x7E0B, 0x7E13, 
	0x7E1C, 0x7E25, 0x7E2D, 0x7E36, 0x7E3E, 0x7E46, 0x7E4E, 0x7E56, 
	0x7E5E, 0x7E66, 0x7E6E, 0x7E76, 0x7E7E, 0x7E85, 0x7E8D, 0x7E94, 
	0x7E9C, 0x7EA3, 0x7EAA, 0x7EB2, 0x7EB9, 0x7EC0, 0x7EC7, 0x7ECE,
	0x7ED4, 0x7EDB, 0x7EE2, 0x7EE8, 0x7EEF, 0x7EF5, 0x7EFC, 0x7F02, 
	0x7F08, 0x7F0E, 0x7F14, 0x7F1A, 0x7F20, 0x7F26, 0x7F2C, 0x7F31, 
	0x7F37, 0x7F3C, 0x7F42, 0x7F47, 0x7F4C, 0x7F52, 0x7F57, 0x7F5C, 
	0x7F61, 0x7F66, 0x7F6A, 0x7F6F, 0x7F74, 0x7F78, 0x7F7D, 0x7F81, 
	0x7F86, 0x7F8A, 0x7F8E, 0x7F92, 0x7F96, 0x7F9A, 0x7F9E, 0x7FA2, 
	0x7FA6, 0x7FA9, 0x7FAD, 0x7FB0, 0x7FB4, 0x7FB7, 0x7FBB, 0x7FBE, 
	0x7FC1, 0x7FC4, 0x7FC7, 0x7FCA, 0x7FCD, 0x7FCF, 0x7FD2, 0x7FD5, 
	0x7FD7, 0x7FD9, 0x7FDC, 0x7FDE, 0x7FE0, 0x7FE2, 0x7FE4, 0x7FE6, 
	0x7FE8, 0x7FEA, 0x7FEC, 0x7FEE, 0x7FEF, 0x7FF1, 0x7FF2, 0x7FF3,
	0x7FF5, 0x7FF6, 0x7FF7, 0x7FF8, 0x7FF9, 0x7FFA, 0x7FFB, 0x7FFB, 
	0x7FFC,	0x7FFD, 0x7FFD, 0x7FFE, 0x7FFE, 0x7FFE, 0x7FFE, 0x7FFE, 
	0x7FFF 
};

/******************************************************************************
 * @function SinTable_Lookup
 *
 * @brief sine table lookup
 *
 * This function will lookup a sin value in the table
 *
 * @param[in]   wPhase      phase index
 *
 * @return      sine table value
 *
 *****************************************************************************/
S16 SinTable_Lookup( U16 wPhase )
{
  S16 sSinValue;
	U16 wQuadrant, wAngle;

	// compute the quadrant/angle
	wQuadrant = wPhase / 1024;
	wAngle = wPhase % 1024;

	// now determine the value
	switch ( wQuadrant )
	{
		case 0:
			sSinValue = asSinTable[ wAngle ];
			break;
	
		case 1:
			sSinValue = asSinTable[ 1024 - wAngle ];
			break;
		
		case 2:
			sSinValue = -asSinTable[ wAngle ];
			break;
		
		case 3:
			sSinValue = -asSinTable[ 1024 - wAngle ];
			break;
			
		default :
			sSinValue = 0;
			break;
	}

  // return the value
  return( sSinValue );
}
 
/**@} EOF SinTable.c */
